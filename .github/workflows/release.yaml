name: Publish release artifacts

on:
  release:
    types: [created]
permissions:
  contents: write
  pull-requests: write

jobs:

  docker_build:
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v3
    - uses: draios/infra-actions-buildnpush@main
      with:
        push_to_quay: true
        image_name: "sysdig-aws-nuke"
        image_description: "image for sysdig-aws-nuke"
        context_path: "."
        dockerfile: "Dockerfile"
        dry_run: ${{ ! ((github.event_name == 'push' && github.ref == 'refs/heads/main') || (github.event_name == 'workflow_dispatch' && github.event.inputs.dry_run == 'false')) }}
        artifactory_prefix: "docker.internal.sysdig.com/utils"
        artifactory_username: ${{ secrets.ARTIFACTORY_USERNAME }}
        artifactory_password: ${{ secrets.ARTIFACTORY_PASSWORD }}
        quay_username: ${{ secrets.QUAY_USERNAME }}
        quay_password: ${{ secrets.QUAY_PASSWORD }}
        github_token: ${{ secrets.GITHUB_TOKEN }}


  goreleaser:
    needs: build
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.21'
      - name: Retag everything
        continue-on-error: true
        shell: bash
        run: |
          git tag --list | grep "container/" | while read -r not_semver_tag; do
            semver_tag="v$(echo ${not_semver_tag} | cut -d'-' -f 3)"
            git tag ${semver_tag} ${not_semver_tag} 2> /dev/null || true
          done
      - name: Set GoReleaser CURRENT and PREVIOUS tags
        shell: bash
        run: |
          echo "GORELEASER_CURRENT_TAG=$(git tag --list --sort=v:refname | grep -v "container/" | tail -n1 | cut -d'-' -f 3)" >> $GITHUB_ENV
          echo "GORELEASER_PREVIOUS_TAG=$(git tag --list --sort=v:refname | grep -v "container/" | tail -n2 | head -n1 | cut -d'-' -f 3)" >> $GITHUB_ENV
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        if: ${{ ((github.event_name == 'push' && github.ref == 'refs/heads/main') || (github.event_name == 'workflow_dispatch' && github.event.inputs.dry_run == 'false')) }}
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
